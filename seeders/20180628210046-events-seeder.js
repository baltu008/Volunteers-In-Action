var faker = require('faker');





'use strict';

module.exports = {
  up: (queryInterface, Sequelize) => {

    return queryInterface.bulkInsert('Events', [{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      },{
        event_name: faker.lorem.sentence(),
        location: faker.address.city(),
        date: faker.date.future(),
        start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
        description: faker.lorem.sentences(),
        organizer: faker.name.findName(),
        contact: faker.internet.email(),
        volunteers_needed: Math.floor((Math.random() * 20) + 1),
        status_passed: false,
        createdAt: new Date(),
        updatedAt: new Date()
      }


    ]);
  },

  down: (queryInterface, Sequelize) => {
    /*
      Add reverting commands here.
      Return a promise to correctly handle asynchronicity.

      Example:
      return queryInterface.bulkDelete('Person', null, {});
    */
  }
};
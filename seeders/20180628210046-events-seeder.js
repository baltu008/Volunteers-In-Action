var faker = require('faker');





'use strict';

module.exports = {
  up: (queryInterface, Sequelize) => {

    return queryInterface.bulkInsert('Events', [{
      event_name: faker.lorem.sentence(),
      location: '6502 Merrimac Ln N Osseo, Minnesota(MN), 55311',
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: '7139 Peony Ln N Osseo, Minnesota(MN), 55311',
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: '2649 12th Ave S, Minneapolis, MN 55407',
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: '89 Century Ave N, St Paul, MN 55119',
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: '2945 Hazelwood Street North, Maplewood, MN 55109',
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: '990 Lone Oaks Road, Eagan, MN 55121',
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: '850 Grand Avenue, Saint Paul, MN 55105',
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: '237 7th Street East, Saint Paul, MN 55101',
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: '2900 Rice Street, Little Canada, MN 55113',
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: '8587 Edinburgh Center Drive, Brooklyn Park, MN 55445',
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: '3540 Winnetka Ave North, New Hope, MN 55427',
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: '1712 Randolph Avenue, St. Paul MN 55105',
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: '1150 Goodrich Avenue, St. Paul MN 55105',
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: '7280 E Point Douglas Rd South, Cottage Grove, Minnesota 55016',
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: '1500 Central Park Commons Drive, Eagan, Minnesota 55121',
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: '1920 Grant Street NW, Faribault, Minnesota 55021',
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: '2015 South Broadway Street, New Ulm, Minnesota 56073',
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: '410 South Riverfront Drive, Mankato, Minnesota 56001',
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: '1451 Adams Street South, Shakopee, Minnesota 55379',
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: '1475 W Service Drive, Winona, Minnesota 55987',
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: faker.address.city(),
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: faker.address.city(),
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: faker.address.city(),
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: faker.address.city(),
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: faker.address.city(),
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: faker.address.city(),
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: faker.address.city(),
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: faker.address.city(),
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: faker.address.city(),
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: faker.address.city(),
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: faker.address.city(),
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: faker.address.city(),
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: faker.address.city(),
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: faker.address.city(),
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: faker.address.city(),
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: faker.address.city(),
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: faker.address.city(),
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: faker.address.city(),
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: faker.address.city(),
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: faker.address.city(),
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: faker.address.city(),
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: faker.address.city(),
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: faker.address.city(),
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }, {
      event_name: faker.lorem.sentence(),
      location: faker.address.city(),
      date: faker.date.future(),
      start_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      end_time: Math.floor((Math.random() * 19) + 6) + ":" + Math.floor((Math.random() * 60) + 0) + ":" + Math.floor((Math.random() * 59) + 0),
      description: faker.lorem.sentences(),
      organizer: faker.name.findName(),
      contact: faker.internet.email(),
      volunteers_needed: Math.floor((Math.random() * 20) + 1),
      status: false,
      createdAt: new Date(),
      updatedAt: new Date()
    }]);
  },

  down: (queryInterface, Sequelize) => {
    /*
      Add reverting commands here.
      Return a promise to correctly handle asynchronicity.

      Example:
      return queryInterface.bulkDelete('Person', null, {});
    */
  }
};